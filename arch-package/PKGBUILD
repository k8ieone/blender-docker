# Based on https://gitlab.archlinux.org/archlinux/packaging/packages/blender/-/blob/main/PKGBUILD
#  - remove makedepend, optdepend on cuda
#  - Removed the unnecessary Optix source
#  - Disabled CUDA and Optix Cycles device support

pkgname=blender
pkgver=4.4.0
pkgrel=1
epoch=20
pkgdesc="A fully integrated 3D graphics creation suite"
arch=('x86_64' 'aarch64')
license=(
  Apache-2.0
  BSD-2-Clause
  BSD-3-Clause
  GPL-2.0-or-later
  GPL-3.0-or-later
  LGPL-2.1-or-later
  MIT
  MPL-2.0
  Zlib
)
url="http://www.blender.org"
depends=(
  'alembic'
  'bash'
  'boost-libs'
  'draco'
  'embree'
  'expat'
  'ffmpeg'
  'fftw'
  'freetype2'
  'gcc-libs'
  'glew'
  'glibc'
  'gmp'
  'hicolor-icon-theme'
  'imath'
  'intel-oneapi-compiler-dpcpp-cpp-runtime-libs'
  'intel-oneapi-compiler-shared-runtime-libs'
  'jack'
  'jemalloc'
  'level-zero-loader'
  'libepoxy'
  'libharu'
  'libjpeg-turbo'
  'libpng'
  'libsndfile'
  'libspnav'
  'libtiff'
  'libwebp'
  'libx11'
  'libxfixes'
  'libxi'
  'libxkbcommon'
  'libxml2'
  'libxrender'
  'libxxf86vm'
  'llvm-libs'
  'materialx'
  'onetbb'
  'openal'
  'opencolorio'
  'openexr'
  'openimagedenoise'
  'openimageio'
  'openjpeg2'
  'openpgl'
  'openshadinglanguage'
  'opensubdiv'
  'openvdb'
  'openxr'
  'potrace'
  'pugixml'
  'pystring'
  'python'
  'python-numpy'
  'python-requests'
  'python-zstandard'
  'sdl2'
  'shared-mime-info'
  'usd'
  'xdg-utils'
  'yaml-cpp'
  'zlib'
  'zstd'
)
#depends_x86_64=(
#  'cuda'
#  'hip-runtime-amd'
#  'hiprt'
#  'intel-oneapi-compiler-shared-runtime'
#  'intel-oneapi-dpcpp-cpp'
#  'intel-compute-runtime'
#)
makedepends=(
  'boost'
  'cmake'
  'git'
  'git-lfs'
  'level-zero-headers'
  'libdecor'
  'mold'
  'llvm'
  'mesa'
  'ninja'
  'subversion'
  'wayland-protocols'
)
# We're using !lto here as otherwise we get stuff such as FS#77557
options=('!lto')
# git+https://projects.blender.org/blender/blender.git#commit=$_commit
# _commit=ffe93138751e
source=("git+https://projects.blender.org/blender/blender.git#tag=v$pkgver"
        "git+https://projects.blender.org/blender/blender-assets#tag=v$pkgver"
        #https://developer.download.nvidia.com/redist/optix/v8.0/OptiX-8.0-Include.zip
        hiprt-lib-path.patch)
sha512sums=('22c1664a45b1c0f5f5599a065883c19563197c5db7df8ce758465b7bcfb41ab5865494803e27c7ba265c54f5e32a45d2e83dbe00bd927a98a00ddd38c11d06fc'
            '43cc5f388581698a68ad611222fcf48445441fc58685259beacb4e6de62c86db6adb7d255f1781bbb1cacf3eade4a6745ddcc519dfed3f776bddcbe1e3ee82d9'
            '52dd6c4496af38505761e559adee556176aa2ad023f073618af77f6c9bc5e3a8faa59c8f259dc92302f7e650740afd2060951129408f1939d29c0901e8ccccae')

prepare() {
  cd "$pkgname"

  git submodule init
  git config submodule.release/datafiles/assets.url "$srcdir/blender-assets"
  git -c protocol.file.allow=always submodule update

  # Fetch assets from git-lfs
  git -C release/datafiles/assets lfs install --local
  git -C release/datafiles/assets remote add network-origin https://projects.blender.org/blender/blender-assets
  git -C release/datafiles/assets lfs fetch network-origin
  git -C release/datafiles/assets lfs checkout

  patch -p1 -i "$srcdir"/hiprt-lib-path.patch
}

_get_pyver() {
  python -c 'import sys; print(str(sys.version_info[0]) + "." + str(sys.version_info[1]))'
}

build() {
  # This should fix #13.
  export CXXFLAGS=${CXXFLAGS/-Wp,-D_GLIBCXX_ASSERTIONS/}
  CXXFLAGS+=' --param=max-vartrack-size=640000000'

  # Fix numpy discovery
  sed -i "s|core/include|_core/include|g" blender/CMakeLists.txt

  local cmake_options=(
    -B build
    -C "$pkgname/build_files/cmake/config/blender_release.cmake"
    #-C "$srcdir/precache"
    -D CMAKE_BUILD_TYPE=Release
    -D CMAKE_INSTALL_PREFIX=/usr
    -D WITH_LINKER_MOLD=ON
    #-D CUDA_HOST_COMPILER="$NVCC_CCBIN"
    #-D HIP_ROOT_DIR=/opt/rocm
    #-D HIPRT_INCLUDE_DIR=/opt/rocm/include
    -D OCLOC_INSTALL_DIR=/usr
    #-D OPTIX_ROOT_DIR="$srcdir"
    -D PYTHON_VERSION="$(_get_pyver)"
    #-D SYCL_ROOT_DIR=/opt/intel/oneapi/compiler/latest
    #-D SYCL_OFFLINE_COMPILER_PARALLEL_JOBS=8
    -D USD_ROOT_DIR=/usr
    -D WITH_CYCLES_OSL=ON
    -D WITH_CYCLES_DEVICE_CUDA=OFF
    -D WITH_CYCLES_DEVICE_OPTIX=OFF
    -D WITH_CYCLES_DEVICE_HIP=OFF
    -D WITH_CYCLES_DEVICE_ONEAPI=OFF
    -D WITH_CYCLES_HIP_BINARIES=OFF
    -D WITH_CYCLES_ONEAPI_BINARIES=OFF
    -D WITH_INSTALL_PORTABLE=OFF
    -D WITH_PYTHON_INSTALL=OFF
    -G Ninja
    -S "$pkgname"
    -W no-dev
  )

  cmake "${cmake_options[@]}"
  cmake --build build
}

package() {
  DESTDIR="${pkgdir}" cmake --install build
  cd "$pkgname"

  install -Dm755 release/bin/blender-softwaregl "${pkgdir}/usr/bin/blender-softwaregl"
  python -m compileall "${pkgdir}/usr/share/blender"
  python -O -m compileall "${pkgdir}/usr/share/blender"

  install -Dm644 release/freedesktop/org.blender.Blender.metainfo.xml "${pkgdir}/usr/share/metainfo/org.blender.Blender.metainfo.xml"

  install -vDm 644 doc/license/{BSD-{2,3}-Clause,MIT,Zlib}-license.txt -t "$pkgdir/usr/share/licenses/$pkgname/"
}
